name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests - PROD
    runs-on: ubuntu-latest
    env:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin1234
      MINIO_HOST: localhost
      MINIO_PORT: 9000

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 --name minio -e "MINIO_ACCESS_KEY=admin" -e "MINIO_SECRET_KEY=admin1234" -v /tmp/data:/data -v /tmp/config:/root/.minio minio/minio server /data

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        env:
          MINIO_ACCESS_KEY: admin
          MINIO_SECRET_KEY: admin1234
        run: npm test

  deploy:
    name: Deploy to Fly - PROD
    runs-on: ubuntu-latest
    needs: test
    concurrency: deploy-group

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Checkout Flyctl Actions
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set Fly Secrets
        run: flyctl secrets -a epaper-rlv-nest set DATABASE_URL=${{ secrets.DATABASE_URL }} MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }} MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }} MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }} MINIO_PORT=${{ secrets.MINIO_PORT }} MINIO_USE_SSL=${{ secrets.MINIO_USE_SSL }} MINIO_BUCKET=${{ secrets.MINIO_BUCKET }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy MinIO
        run: flyctl deploy --remote-only --dockerfile .fly/minio/Dockerfile -c .fly/minio/fly.staging.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy NestJS App

        run: flyctl deploy --remote-only --dockerfile Dockerfile -c fly.staging.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
