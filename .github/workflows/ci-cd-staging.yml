name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - staging
  push:
    branches:
      - staging

jobs:
  test:
    name: Run Tests - STAGING
    runs-on: ubuntu-latest
    env:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin1234
      MINIO_HOST: localhost
      MINIO_PORT: 9000

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start MinIO Container
        run: |
          docker run -d \
            --name minio \
            -p 9000:9000 -p 9001:9001 \
            -e MINIO_ROOT_USER=$MINIO_ROOT_USER \
            -e MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD \
            minio/minio server /data --console-address ":9001"

      - name: Wait for MinIO to Start
        run: |
          until curl -f http://localhost:9000/minio/health/live; do
            echo "Waiting for MinIO to be ready..."
            sleep 5
          done
          echo "MinIO is ready!"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        env:
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb"
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: admin1234
          MINIO_ENDPOINT: http://localhost:9000/
        run: drizzle-kit migrate --config=drizzle.config.ts && npm test

  deploy:
    name: Deploy to Railway - STAGING
    runs-on: ubuntu-latest
    needs: test
    container: ghcr.io/railwayapp/cli:latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN_STAGING }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy NestJS
        run: railway up --service=${{ vars.RAILWAY_SERVICE_ID_STAGING }}
